# Generated by Django 4.1.4 on 2023-01-12 23:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import re


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("news", "0003_news_slug"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="comment",
            options={"ordering": ("-created",)},
        ),
        migrations.AlterModelOptions(
            name="file",
            options={"ordering": ("-created",)},
        ),
        migrations.AlterModelOptions(
            name="highlight",
            options={"verbose_name": "highlight", "verbose_name_plural": "highlights"},
        ),
        migrations.AlterModelOptions(
            name="image",
            options={"ordering": ("-created",)},
        ),
        migrations.AlterModelOptions(
            name="like",
            options={"ordering": ("-created",)},
        ),
        migrations.AlterModelOptions(
            name="news",
            options={"verbose_name_plural": "news"},
        ),
        migrations.RenameField(
            model_name="comment",
            old_name="created_at",
            new_name="created",
        ),
        migrations.RenameField(
            model_name="comment",
            old_name="modified_at",
            new_name="modified",
        ),
        migrations.RenameField(
            model_name="file",
            old_name="created_at",
            new_name="created",
        ),
        migrations.RenameField(
            model_name="file",
            old_name="modified_at",
            new_name="modified",
        ),
        migrations.RenameField(
            model_name="highlight",
            old_name="created_at",
            new_name="created",
        ),
        migrations.RenameField(
            model_name="highlight",
            old_name="modified_at",
            new_name="modified",
        ),
        migrations.RenameField(
            model_name="image",
            old_name="created_at",
            new_name="created",
        ),
        migrations.RenameField(
            model_name="image",
            old_name="modified_at",
            new_name="modified",
        ),
        migrations.RenameField(
            model_name="like",
            old_name="created_at",
            new_name="created",
        ),
        migrations.RenameField(
            model_name="like",
            old_name="modified_at",
            new_name="modified",
        ),
        migrations.RenameField(
            model_name="news",
            old_name="created_at",
            new_name="created",
        ),
        migrations.RenameField(
            model_name="news",
            old_name="modified_at",
            new_name="modified",
        ),
        migrations.RenameField(
            model_name="tag",
            old_name="created_at",
            new_name="created",
        ),
        migrations.RenameField(
            model_name="tag",
            old_name="modified_at",
            new_name="modified",
        ),
        migrations.AlterField(
            model_name="comment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AlterField(
            model_name="file",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AlterField(
            model_name="highlight",
            name="highlight",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="highlight",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AlterField(
            model_name="image",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AlterField(
            model_name="like",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AlterField(
            model_name="news",
            name="allow_comments",
            field=models.BooleanField(default=True, verbose_name="allow comments"),
        ),
        migrations.AlterField(
            model_name="news",
            name="allow_highlights",
            field=models.BooleanField(default=True, verbose_name="allow highlights"),
        ),
        migrations.AlterField(
            model_name="news",
            name="allow_likes",
            field=models.BooleanField(default=True, verbose_name="allow likes"),
        ),
        migrations.AlterField(
            model_name="news",
            name="body",
            field=models.TextField(verbose_name="news body"),
        ),
        migrations.AlterField(
            model_name="news",
            name="is_published",
            field=models.BooleanField(default=False, verbose_name="is published"),
        ),
        migrations.AlterField(
            model_name="news",
            name="slug",
            field=django_extensions.db.fields.AutoSlugField(
                blank=True, editable=False, populate_from=["title"]
            ),
        ),
        migrations.AlterField(
            model_name="news",
            name="title",
            field=models.CharField(
                help_text="Min lenght of 3 chars, max length of 200 chars, only alphanumeric, ', \", dot and space allowed",
                max_length=200,
                validators=[
                    django.core.validators.MinLengthValidator(
                        3, message="Min length is 3 characters."
                    ),
                    django.core.validators.MaxLengthValidator(
                        200, message="Max length is 200 characters."
                    ),
                    django.core.validators.RegexValidator(
                        message="Only alphanumeric, ', \", dot and space allowed.",
                        regex="^[\\w\\.\\'\\\" ]+$",
                    ),
                ],
                verbose_name="news title",
            ),
        ),
        migrations.AlterField(
            model_name="news",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="name",
            field=models.CharField(
                help_text="Must be unique, only alphanumeric allowed",
                max_length=50,
                unique=True,
                validators=[
                    django.core.validators.MinLengthValidator(
                        3, message="Min length is 3 characters."
                    ),
                    django.core.validators.MaxLengthValidator(
                        50, message="Max length is 200 characters."
                    ),
                    django.core.validators.RegexValidator(
                        re.compile("^[-a-zA-Z0-9_]+\\Z"),
                        "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                        "invalid",
                    ),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
    ]
